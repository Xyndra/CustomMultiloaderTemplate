plugins {
    id("java-library")
    id("maven-publish")
    kotlin("jvm")
    id("net.neoforged.gradle.vanilla") version "7.0.189"
}

val mavenGroup: String by project
val modId: String by project
val modVersion: String by project
val minecraftVersion: String by project
val neoVersion: String by project
val parchmentVersion: String by project

subsystems {
    parchment {
        addRepository(false)
        parchmentArtifact("org.parchmentmc.data:parchment-$parchmentVersion")
    }
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Sponge"
                url = uri("https://repo.spongepowered.org/repository/maven-public/")
            }
        }
        filter { includeGroupAndSubgroups("org.spongepowered") }
    }
}

tasks.processResources {
    doFirst {
        // Copy the gradle properties file to the resources directory
        val propertiesFile = project.file("src/main/resources/project.props")
        propertiesFile.writeText(buildString {
            appendLine("# Generated by Gradle, will get overwritten on next build!")
            for ((key, value) in project.properties) {
                appendLine("$key=${value.toString().replace("\\", "\\\\").replace("\n", "\\n")}")
            }
        }, Charsets.UTF_8)
    }
}

base {
    archivesName = "$modId-$minecraftVersion-common-$modVersion"
}

dependencies {
    compileOnly("org.spongepowered:mixin:0.8.5")
    compileOnly("io.github.llamalad7:mixinextras-common:0.3.5")
    compileOnly("net.minecraft:client:$minecraftVersion")
    annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5")
    compileOnly(kotlin("reflect"))
    compileOnly("org.ow2.asm:asm:9.6")
}